#!/bin/bash


iter=$1

min=$2
step=$3
max=$4

log="$HOME/Dropbox/Stuff1819/proooject/Project/code/src/scripts/trec-log"

bigtime=0

respho=()
resswi=()
resgnu=()

rm $log
touch $log


echo "$iter"

for i in $(seq 1 $iter)
do
echo "Repeat: $i"

respho=()
resswi=()
resgnu=()

for s in $(seq $min $step $max)
do

echo "Size: $s"

cd ~/Dropbox/Stuff1819/proooject/Project/code/src/bench

#write files



echo "preventLastCallOpt(X).
any(X).
test(0).
test(N) :- any(f(a)), N1 is N - 1, test(N1), preventLastCallOpt(N1).
halt.
goal :- test($s), halt.
?- goal
">trec-test.txt




echo "preventLastCallOpt(X).
any(X).
test(0).
test(N) :- any(f(a)), N1 is N - 1, test(N1), preventLastCallOpt(N1).
goal :- test($s).
:- initialization(goal).
">trec-test-gnu.pl



echo -e "\nSWI" >> $log

swipl -G100g -T20g -L10g -o "swi_executables/trec-test.plexe" -g goal -c "trec-test.txt" &>> $log

echo -e "\nSWI finish compile\n" >> $log


swi=$(/usr/bin/time -f '%U' "./swi_executables/trec-test.plexe" |& tee -a $log)
resswi+=("$swi")
echo swi >> $log
echo $swi >> $log



echo "my compiler" >> $log
cd ~/Dropbox/Stuff1819/proooject/Project/code/src
# OCAMLRUNPARAM="h=3G,s=3G"
# export OCAMLRUNPARAM="h=3G,s=3G"

dune exec ./writeToFile.exe "trec-test" >> $log


dune build ./runFromFile.exe >> $log


me=$(/usr/bin/time -f '%U' ./_build/default/runFromFile.exe "trec-test" |& tee -a $log)
respho+=("$me")
echo pho >> $log
echo $pho >> $log


cd ~/Dropbox/Stuff1819/proooject/Project/code/src/bench


TRAILSZ=30720 CSTRSZ=3072 GLOBALSZ=8192 LOCALSZ=409600 gplc --no-top-level "trec-test-gnu.pl" >>$log


gnu=$( TRAILSZ=307200 CSTRSZ=3072 GLOBALSZ=81920 LOCALSZ=5096000 /usr/bin/time -f '%U' $HOME/Dropbox/Stuff1819/proooject/Project/code/src/scripts/repeat.sh trec-test |& tee -a $log)
resgnu+=("$gnu")
echo gnu >> $log
echo $resgnu >> $log


done

echo
echo pho
echo "${respho[*]}"
echo swi
echo "${resswi[*]}"
echo gnu
echo "${resgnu[*]}"

notify-send --urgency=critical "its done :)"

beep


done
